# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Create a signed version of the app"
  lane :signed_apk do

    # get version and build number from git
    # https://blog.uncommon.is/using-git-to-generate-versionname-and-versioncode-for-android-apps-aaa9fc2c96af
    versionName = sh("git describe --dirty").gsub(/\s+/, "")
    versionCode = sh("git rev-list --first-parent --count origin/master").gsub(/\s+/, "").to_i

    # build the release variant
    gradle(
      task: "assemble",
      build_type: "Release",
      print_command: false,
      # Gradle properties
      properties: {
        "android.injected.signing.key.alias" => ENV['KEY_ALIAS'],
        "android.injected.signing.key.password" => ENV['KEY_PASSWORD'],
        "versionCode" => versionCode,
        "versionName" => versionName
      }    
    )

    puts "Created signed apk. VersionName: #{versionName}. VersionCode: #{versionCode}"

  end     

  desc "Upload a signed .apk to Fabric Beta service."
  lane :fabric do
    # upload to Beta by Crashlytics
    crashlytics(
      api_token: ENV['FABRIC_API_TOKEN'],
      build_secret: ENV['FABRIC_BUILD_SECRET']
    )
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    signed_apk
    fabric
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
